select(-X1) %>%
gather(channel, budget , -Sales) %>%
rename_with(tolower)
# Chunk 3
library(modelr)
TV_data <- adversiting_tided %>%
filter(channel == "TV")
smod <- lm(sales ~ budget, data = TV_data)
grid <- TV_data %>%
add_predictions(smod)
TV_data %>% ggplot(aes(budget, sales)) +
geom_point(colour = "red") +
geom_smooth(method = "lm", se = FALSE) +
geom_segment(data = grid,
aes(xend = budget, yend = pred),
colour = "grey",
alpha = 0.5)
# Chunk 4
library(broom)
tidy(smod)
# Chunk 5
glance(smod)
# Chunk 6
mmod <- lm(Sales ~ TV + Radio + Newspaper, data = adversiting)
# Chunk 7
tidy(mmod)
# Chunk 8
glance(mmod)
# Chunk 9
credit <- read_csv("ISLR/ISLR-Auto/Credit.csv")
credit <- credit %>%
select(-X1) %>%
rename_with(tolower)
# Chunk 10
lm(balance ~ gender, data = credit)
lm(balance ~ ethnicity, data = credit)
# Chunk 11
categorical_mod <- credit %>%
lm(Sales ~ TV*Radio, data = .)
# Chunk 12
credit %>%
ggplot(aes(income, balance, colour = student)) +
geom_smooth(method = "lm", se = FALSE)
categorical_mod <- credit %>%
lm(balance ~ income + student, data = .)
credit %>%
add_predictions(categorical_mod) %>%
ggplot(aes(income, pred)) +
geom_line()
credit %>%
add_predictions(categorical_mod) %>%
ggplot(aes(income, pred, colour = student)) +
geom_line()
credit %>%
add_predictions(categorical_mod) %>%
ggplot(aes(income, pred, colour = student)) +
geom_line()
y = "Balance Account"
y = "Balance Account",
title = "Linear regression of balance given by income"
x = "Income",
y = "Balance Account",
title = "Linear regression of balance given by income"
credit %>%
add_predictions(categorical_mod) %>%
ggplot(aes(income, pred, colour = student)) +
geom_line() +
labs(
x = "Income",
y = "Balance Account",
title = "Linear regression of balance given by income"
)
credit %>%
add_predictions(categorical_mod) %>%
ggplot(aes(income, pred, colour = student)) +
geom_line() +
labs(
x = "Income",
y = "Balance Account",
title = "Linear regression of balance on income for studenst and non-students",
subtitle = "Without interaction term"
)
p1 <- credit %>%
add_predictions(categorical_mod) %>%
ggplot(aes(income, pred, colour = student)) +
geom_line() +
labs(
x = "Income",
y = "Balance Account",
title = "Linear regression of balance on income for studenst and non-students",
subtitle = "Without interaction term"
) %T>%
print()
p1
p1 <- credit %>%
add_predictions(categorical_mod) %>%
ggplot(aes(income, pred, colour = student)) +
geom_line() +
labs(
x = "Income",
y = "Balance Account",
title = "Linear regression of balance on income for studenst and non-students",
subtitle = "Without interaction term"
)
p1
p2 <- credit %>%
ggplot(aes(income, balance, colour = student)) +
geom_smooth(method = "lm", se = FALSE) +
labs(
x = "Income",
y = "Balance Account",
title = "Linear regression of balance on income for studenst and non-students",
subtitle = "With interaction term"
)
p2 <- credit %>%
ggplot(aes(income, balance, colour = student)) +
geom_smooth(method = "lm", se = FALSE) +
labs(
x = "Income",
y = "Balance Account",
title = "Linear regression of balance on income for studenst and non-students",
subtitle = "With interaction term"
)
p2 <- credit %>%
ggplot(aes(income, balance, colour = student)) +
geom_smooth(method = "lm", se = FALSE) +
labs(
x = "Income",
y = "Balance Account",
title = "Linear regression of balance on income for studenst and non-students",
subtitle = "With interaction term"
)
p2
library(gridExtra)
grid.arrange(p1, p2)
grid.arrange(p1, p2, ncol = 2)
p1 <- credit %>%
add_predictions(categorical_mod) %>%
ggplot(aes(income, pred, colour = student)) +
geom_line(size = 2) +
labs(
x = "Income",
y = "Balance Account",
title = "Linear regression of balance on income for studenst and non-students",
subtitle = "Without interaction term"
)
p1
p1 <- credit %>%
add_predictions(categorical_mod) %>%
ggplot(aes(income, pred, colour = student)) +
geom_line(size = 1) +
labs(
x = "Income",
y = "Balance Account",
title = "Linear regression of balance on income for studenst and non-students",
subtitle = "Without interaction term"
)
p1
grid.arrange(p1, p2, ncol = 2)
auto <- read_csv("ISLR/ISLR-Auto/Auto.csv"
auto <- read_csv("ISLR/ISLR-Auto/Auto.csv")
auto <- read_csv("ISLR/ISLR-Auto/Auto.csv")
auto
auto
auto %>%
ggplot(aes(horsepower, mpg))
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point()
autod
auto
auto %>%
ggplot(aes(seq_range(horsepower, by 50), mpg)) +
geom_point()
auto %>%
ggplot(aes(seq_range(horsepower, by = 50), mpg)) +
geom_point()
auto %>%
ggplot(aes(seq_range(horsepower, by = 50), mpg)) +
geom_point()
auto %>%
ggplot(aes(horse, mpg)) +
geom_point()
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point()
libray(ISLR)
library(ISLR)
detach(ISLR)
auto <- ISRL::Auto
auto <- ISLR::Auto
auto
auto <- as_tibble(ISLR::Auto)
auto
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point()
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 2)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 1)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.4)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.3)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.4)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_smooth()
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_smooth(method = "lm")
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE, colour = "yellow")
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE, colour = "green")
auto %>%
lm(mpg ~ horsepower, data = .)
auto %>%
lm(mpg ~ splines::ns(horsepower,2), data = .)
auto %>%
lm(mpg ~ horsepower + I(horsepower^2), data = .)
mod2 <- auto %>%
lm(mpg ~ horsepower + I(horsepower^2), data = .)
mod5 <- auto %>%
lm(mpg ~ horsepower + I(horsepower^5), data = .)
auto %>%
data_grid(horsepower) %>%
gather_predictions(mod2, mod5)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE, colour = "green") +
geom_line(data = grid,
aes(horsepower, pred, colour = model))
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE, colour = "green") +
geom_line(data = grid,
aes(horsepower, pred, colour = model))
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(mod2, mod5)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE, colour = "green") +
geom_line(data = grid,
aes(horsepower, pred, colour = model))
mod1 <- lm(mpg ~ horsepower + I(horsepower^1), data = .)
mod1 <- auto %>%
lm(mpg ~ horsepower + I(horsepower^1), data = .)
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(mod1, mod2, mod5)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_line(data = grid,
aes(horsepower, pred, colour = model))
library(splines)
library(splines)
auto <- as_tibble(ISLR::Auto)
mod1 <- auto %>%
lm(mpg ~ horsepower + ns(horsepower,1), data = .)
mod2 <- auto %>%
lm(mpg ~ horsepower + ns(horsepower,2), data = .)
mod5 <- auto %>%
lm(mpg ~ horsepower + ns(horsepower,5), data = .)
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(mod1, mod2, mod5)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_line(data = grid,
aes(horsepower, pred, colour = model))
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(linear = mod1, degree2 = mod2, degree5 = mod5)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_line(data = grid,
aes(horsepower, pred, colour = model))
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(degree2 = mod2, degree5 = mod5)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_line(data = grid,
aes(horsepower, pred, colour = model))
inear = mod1,
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_line(data = grid,
aes(horsepower, pred, colour = model))
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(linear = mod1, degree2 = mod2, degree5 = mod5)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_line(data = grid,
aes(horsepower, pred, colour = model))
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(linear = mod1, degree2 = mod2, degree5 = mod5)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_line(data = grid,
aes(horsepower, pred, colour = model))
glance(mod2)
tidy(mod2)
mod1 <- auto %>%
lm(mpg ~ ns(horsepower,1), data = .)
mod2 <- auto %>%
lm(mpg ~ ns(horsepower,2), data = .)
mod5 <- auto %>%
lm(mpg ~ ns(horsepower,5), data = .)
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(linear = mod1, degree2 = mod2, degree5 = mod5)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_line(data = grid,
aes(horsepower, pred, colour = model))
tidy(mod2)
mod1 <- auto %>%
lm(mpg ~ poly(horsepower,1), data = .)
mod2 <- auto %>%
lm(mpg ~ poly(horsepower,2), data = .)
mod5 <- auto %>%
lm(mpg ~ poly(horsepower,5), data = .)
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(linear = mod1, degree2 = mod2, degree5 = mod5)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_line(data = grid,
aes(horsepower, pred, colour = model))
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_line(data = grid,
aes(horsepower, pred, colour = model))
tidy(mod2)
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(Linear = mod1, Degree2 = mod2, Degree5 = mod5)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_line(data = grid,
aes(horsepower, pred, colour = model))
tidy(mod2)
mod2 <- auto %>%
lm(mpg ~ poly(horsepower,2), data = .)
tidy(mod2)
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(Linear = mod1, Degree2 = mod2, Degree5 = mod5)
gather_residuals(Linear = mod1, Degree2 = mod2, Degree5 = mod5)
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(Linear = mod1, Degree2 = mod2, Degree5 = mod5) %>%
gather_residuals(resid1 = mod1, resid2 = mod2, resid5 = mod5)
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(Linear = mod1, Degree2 = mod2, Degree5 = mod5) %>%
gather_residuals(resid1 = mod1, resid2 = mod2, resid5 = mod5)
grid <- auto %>%
data_grid(horsepower) %>%
# gather_predictions(Linear = mod1, Degree2 = mod2, Degree5 = mod5) %>%
gather_residuals(resid1 = mod1, resid2 = mod2, resid5 = mod5)
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(Linear = mod1, Degree2 = mod2, Degree5 = mod5) %>%
gather_residuals(mod1, mod2, mod5)
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(Linear = mod1, Degree2 = mod2, Degree5 = mod5) %>%
gather_residuals(mod1, mod2, mod5)
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(Linear = mod1, Degree2 = mod2, Degree5 = mod5) %>%
gather_residuals(mod1, mod2, mod5)
grid <- auto %>%
data_grid(horsepower) %>%
gather_predictions(Linear = mod1, Degree2 = mod2, Degree5 = mod5)
auto %>%
data_grid(horsepower) %>%
gather_residuals(mod1, mod2, mod5)
auto %>%
data_grid(horsepower) %>%
gather_residuals(mod1, mod2, mod5)
auto %>%
data_grid(horsepower) %>%
gather_residuals(mod1, mod2)
auto %>%
data_grid(horsepower) %>%
add_residuals(mod1, mod2)
auto %>%
data_grid(horsepower) %>%
add_residuals(mod1)
auto %>%
gather_residuals(mod1, mod2, mod5)
resdid <- auto %>%
gather_residuals(mod1, mod2, mod5) %>%
```
resdid <- auto %>%
gather_residuals(mod1, mod2, mod5)
resid <- auto %>%
gather_residuals(mod1, mod2, mod5)
rm(resdid)
predictions <- auto %>%
gather_residuals(mod1, mod2, mod5) %>%
gather_predictions(Linear = mod1, Degree2 = mod2, Degree5 = mod5)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_line(data = predictions,
aes(horsepower, pred, colour = model))
rm(resid)
predictions
predictions %>%
ggplot(aes(pred, resid)) +
geom_point() +
facet_wrap(~ model)
predictions %>%
ggplot(aes(pred, resid)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_smooth()
predictions %>%
ggplot(aes(pred, resid)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_smooth() +
facet_wrap(~ model)
predictions %>%
ggplot(aes(pred, resid)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_smooth() +
facet_wrap(~ model, scales = "free")
predictions %>%
ggplot(aes(pred, resid)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_smooth(method = "loess") +
facet_wrap(~ model, scales = "free")
predictions %>%
ggplot(aes(pred, resid)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_smooth(se = FALSE) +
facet_wrap(~ model, scales = "free")
predictions <- auto %>%
gather_residuals(Linear = mod1, Degree2 = mod2, Degree = mod5) %>%
gather_predictions(Linear = mod1, Degree2 = mod2, Degree5 = mod5)
predictions %>% count(model)
auto %>%
ggplot(aes(horsepower, mpg)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_line(data = predictions,
aes(horsepower, pred, colour = model))
predictions %>%
ggplot(aes(pred, resid)) +
geom_point(size = 2, shape = 1, alpha = 0.5) +
geom_smooth(se = FALSE) +
facet_wrap(~ model, scales = "free")
predictions %>%
ggplot(aes(pred, resid)) +
geom_point(size = 2, shape = 1, alpha = 0.2) +
geom_smooth(se = FALSE) +
facet_wrap(~ model, scales = "free")
install.packages("tidytuesdayR")
library(tidyverse)
theme_set(theme_light())
tuesdaydata <- tidytuesdayR::tt_load("2020-04-07")
tuesdaydata
tdf_winners <- tuesdaydata$tdf_winners
tdf_stages <- tuesdaydata$tdf_stages
stage_data <- tuesdaydata$stage_data
tdf_winners %>% View()
tdf_winners %>%
count(nationality)
tdf_winners %>%
count(nationality, sort = TRUE)
